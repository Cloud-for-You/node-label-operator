name: Build and publish

on:
  - workflow_dispatch
#on:
#  push:
#    branches:
#      - main
#    tags:
#      - v*

jobs:
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest
    steps:
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=quay.io/$(echo ${GITHUB_REPOSITORY})
          VERSION=noop
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
            fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
            TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
          elif [ "${{ github.event_name }}" = "push" ]; then
            # TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
            TAGS="${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo $VERSION
          echo $TAGS
      
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to DockerHub or Quay
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and publish image to Github
#        id: build_and_publish
#        uses: docker/build-push-action@v2
#        with:
#          push: true
#          context: .
#          file: ./Dockerfile
#          tags: ${{steps.prep.outputs.tags}}
#          labels: |
#            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
#            org.opencontainers.image.source=${{ github.repositoryUrl }}
#            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
#            org.opencontainers.image.revision=${{ github.sha }}
#            org.opencontainers.image.licenses=${{ github.event.repository.license.name }}
